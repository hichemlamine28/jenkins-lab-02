---
- name: Générer un nom dynamique pour la VM éphémère
  set_fact:
    ephemeral_vm_name: >-
      agent_{{ '%04x' | format((65535 | random)) }}
  become: false

- name: Afficher le nom de agent 
  debug:
    var: ephemeral_vm_name
  become: false

- name: Force stop the template VM (destroy)
  command: virsh destroy jenkins-agent-template
  failed_when: false
  changed_when: false
  # ignore_errors: true  # Si elle est déjà arrêtée, on ne veut pas échouer

- name: Wait until the VM is shut down
  command: virsh domstate jenkins-agent-template
  register: vm_state
  until: vm_state.stdout == "shut off"
  retries: 10
  delay: 2

- name: Cloner la VM depuis le template
  command: >
    virt-clone
    --original jenkins-agent-template
    --name {{ ephemeral_vm_name }}
    --auto-clone
  args:
    creates: "/var/lib/libvirt/images/{{ ephemeral_vm_name }}.qcow2"

- name: Démarrer la VM clonée
  virt:
    name: "{{ ephemeral_vm_name }}"
    state: running

- name: Attendre que la VM boot (30s)
  pause:
    seconds: 30

- name: Obtenir l'adresse IP de la VM clonée
  command: >
    bash -c "virsh domifaddr {{ ephemeral_vm_name }} | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -n1"
  register: ephemeral_vm_ip
  changed_when: false

- name: Afficher l'IP de la VM clonée
  debug:
    msg: "La VM {{ ephemeral_vm_name }} a l'IP : {{ ephemeral_vm_ip.stdout }}"

# - name: Enregistrer le nom et l’IP de la VM dans un fichier partagé
#   copy:
#     dest: /tmp/jenkins-agent-info.txt
#     content: "name={{ ephemeral_vm_name }}\nip={{ ephemeral_vm_ip.stdout }}\n"

- name: Sauvegarder nom et IP de la VM éphémère localement sur KVM
  copy:
    dest: "/tmp/jenkins-agent-info.txt"
    content: |
      name={{ ephemeral_vm_name }}
      ip={{ ephemeral_vm_ip.stdout }}

