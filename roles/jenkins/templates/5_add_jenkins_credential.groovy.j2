import com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey
import com.cloudbees.plugins.credentials.CredentialsScope
import com.cloudbees.plugins.credentials.domains.Domain
import com.cloudbees.plugins.credentials.SystemCredentialsProvider
import jenkins.model.*

def jenkins = Jenkins.instance

// Paramètres dynamiques injectés depuis Ansible
def sshUser = "{{ ssh_user }}"
def credId = "{{ ssh_credential_id }}"

// Lecture de la clé privée
def privateKey = new File("/var/lib/jenkins/.ssh/id_rsa").text.trim()

// Création du credential s’il n’existe pas
def credsStore = SystemCredentialsProvider.getInstance().getStore()
def existingCred = SystemCredentialsProvider.getInstance().getCredentials(Domain.global()).find { it.id == credId }

if (existingCred == null) {
    def newCred = new BasicSSHUserPrivateKey(
        CredentialsScope.GLOBAL,
        credId,
        sshUser,
        new BasicSSHUserPrivateKey.DirectEntryPrivateKeySource(privateKey),
        "",
        "Clé SSH ajoutée dynamiquement"
    )
    credsStore.addCredentials(Domain.global(), newCred)
    println "✅ Credential SSH ajouté"
} else {
    println "ℹ️ Credential SSH déjà existant"
}

jenkins.save()
